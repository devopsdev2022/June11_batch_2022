#Maven Installation#

#Install Java 
sudo apt-get install openjdk-8-jdk -y

#change to opt directory
cd /opt/

#check the directory path
pwd    

#Download and unzip the maven package 
wget http://apachemirror.wuchna.com/maven/maven-3/3.6.3/binaries/apache-maven-3.6.3-bin.tar.gz
tar -xvf apache-maven-3.6.3-bin.tar.gz

#Set env variables
export M2_HOME=/opt/apache-maven-3.6.3    
export PATH=$PATH:$M2_HOME/bin

#check the version
mvn -version 


----------
apt update -y

apt install maven


------
#Install tree tool

apt install tree -y

------



Creating a new Project (war)

mvn archetype:generate -DgroupId=<Artifact Group> -DartifactId=<Artifact ID> -DarchetypeArtifactId=maven-archetype-webapp

Eg1: 
mvn archetype:generate -DgroupId=com.devsanthosh.web -DartifactId=webapp -DarchetypeArtifactId=maven-archetype-webapp



Creating a new Project (jar)

mvn archetype:generate -DgroupId=<Artifact Group> -DartifactId=<Artifact ID>

Example:
Eg2: 
mvn archetype:generate -DgroupId=com.devsanthosh.webjar -DartifactId=new-app



Maven goals and commands

#Cleans the project and removes all files generated by the previous build.
mvn clean 

#Compiles source code of the project.
mvn compile 

#Compiles the test source code.
mvn test-compile 

#Runs tests for the project.
mvn test 

#Creates JAR or WAR file for the project to convert it into a distributable format.
mvn package 

#Deploys the packaged JAR/ WAR file to the local repository.
mvn install

#Copies the packaged JAR/ WAR file to the remote repository after compiling, running tests and building the project. 
mvn deploy
